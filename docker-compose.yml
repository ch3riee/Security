version: '3'
services:
  web:
    restart: always
    image: nginx
    volumes:
      - ./settings/nginx/conf.d:/etc/nginx/conf.d
      - ./src/main/resources/static:/var/lib/static
    ports:
      - "8080:80"
    depends_on:
      - srvjavausers
      - srv-sample
    command: /bin/bash -c "cp -f /etc/nginx/conf.d/site.conf.template /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  srvjavausers:
    build:
      context: .
      dockerfile: DockerFile
    ports:
        - "8081"
    depends_on:
      - db-session
      - db-account
    volumes:
      - ./:/app
      - ./src/main/resources/pki/Public.key:/var/lib/pki-public

  #srvjavausers:
   # restart: always
    #image: gradle:alpine
    #ports:
     # - "8081"
   # depends_on:
    #  - db-session
     # - db-account
   # volumes:
    #  - ./:/app
    #  - ./src/main/resources/pki/Public.key:/var/lib/pki-public
   # working_dir: /app
   # entrypoint: gradle run

  srv-sample:
      restart: always
      image: gradle:alpine
      ports:
        - "8000"
      depends_on:
        - srvjavausers
      volumes:
        - ./../SampleService:/sampleapp
        - ./src/main/resources/pki/Public.key:/var/lib/pki-public
      working_dir: /sampleapp
      entrypoint: gradle run


  db-session:
    restart: always
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=jetty
      - POSTGRES_PASSWORD=jettypass
      - POSTGRES_DB=session
    volumes:
      - ./volumes/postgresql-session:/var/lib/postgresql

  db-account:
    restart: always
    image: postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=jetty
      - POSTGRES_PASSWORD=jettypass
      - POSTGRES_DB=account
    volumes:
      - ./settings/postgre/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./volumes/postgresql-account:/var/lib/postgresql
